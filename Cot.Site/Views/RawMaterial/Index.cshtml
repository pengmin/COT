@using System.ComponentModel
@using System.Reflection
@using Cot.Entities
@model IEnumerable<RawMaterial>
@{
	ViewBag.Title = "原材料管理";
	var pros = new List<PropertyInfo>();
}
<div class="toolbar"><a href="/rawmaterial/add">新增</a></div>
<table class="gridview">
	<thead>
		<tr>
			<th>
				<input type="checkbox" /></th>
			@foreach (var pro in typeof(RawMaterial).GetProperties())
   {
	   var attrs = pro.GetCustomAttributes(typeof(DisplayNameAttribute), false);
	   if (attrs.Length > 0)
	   {
		   var attr = attrs.First() as DisplayNameAttribute;
		   if (attr != null)
		   {
			   pros.Add(pro);
				<th>@attr.DisplayName</th>
		   }
	   }
   }
			<th>操作</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
  {
			<tr>
				<td>
					<input type="checkbox" value="@item.Id" name="Id"/></td>
				@foreach (var pro in pros)
	{
					<td>@pro.GetValue(item, null)</td>
	}
				<td><a href="/rawmaterial/edit/@item.Id">编辑</a><a href="javascript:del(@item.Id);">删除</a></td>
			</tr>
  }
	</tbody>
</table>
<script>
	function del(id) {
		if (confirm("确定删除？")) {
			window.href = '/rawmaterial/del/' + id;
		}
	}
</script>
